#!/usr/bin/python3
"""
Write to file and print out its length
"""
import json

def to_json_string(my_obj):
    """Convert an object to a JSON string."""
    return json.dumps(my_obj)

def write_to_file(filename, my_obj):
    """Write the JSON string representation of my_obj to a file and print its length."""
    json_string = to_json_string(my_obj)
    with open(filename, 'w', encoding='utf-8') as file:
        file.write(json_string)
    print(f"Length of JSON string written: {len(json_string)}")
    return len(json_string)

# Example usage
if __name__ == "__main__":
    data = {"name": "Alice", "age": 30}
    write_to_file('output.json', data)

=============

#!/usr/bin/python3
"""
Convert a JSON string to a Python dictionary
"""
import json

def from_json_string(my_str):
    """Convert a JSON string to a Python dictionary"""
    return json.loads(my_str)

if __name__ == "__main__":
    json_string = '{"name": "Alice", "age": 30}'
    python_dict = from_json_string(json_string)
    print(python_dict)  # Output: {'name': 'Alice', 'age': 30}

============
import json

python_obj = {"name": "Alice", "age": 30}
json_string = json.dumps(python_obj)
print(json_string)  # Output: '{"name": "Alice", "age": 30}'
import json

python_obj = {"name": "Alice", "age": 30}
with open('output.json', 'w') as file:
    json.dump(python_obj, file)
# This will write the JSON representation of python_obj to output.json
import json

json_string = '{"name": "Alice", "age": 30}'
python_obj = json.loads(json_string)
print(python_obj)  # Output: {'name': 'Alice', 'age': 30}
import json

with open('output.json', 'r') as file:
    python_obj = json.load(file)
print(python_obj)  # This will output the Python object read from the JSON file

Notes:
dumps and loads are used for converting to and from JSON strings in memory.

dump and load are used for reading from and writing to files directly.

Use dumps and loads when you want to work with JSON data as strings, and use dump and load when you want to work with files.

==========

list.extend is faster than for loop

    for arg in sys.argv[1:]:
        my_list.append(arg)
    save_to_json_file(my_list, filename)

    my_list.extend(sys.argv[1:])
    save_to_json_file(my_list, filename)